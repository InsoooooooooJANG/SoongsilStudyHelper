
buildscript {
    repositories {
        mavenCentral()
        maven {
            url "https://plugins.gradle.org/m2/"  // 플러그인의 저장소
        }
    }
    dependencies {
        classpath "gradle.plugin.com.ewerk.gradle.plugins:querydsl-plugin:1.0.10"   // 플러그인 디펜던시
    }
}


plugins { // (1)
    id 'org.springframework.boot' version '2.4.1' // RELEASE 삭제
    id 'io.spring.dependency-management' version '1.0.10.RELEASE'
    id 'java'
    id "com.github.node-gradle.node" version "2.2.4"
}

apply plugin: "com.ewerk.gradle.plugins.querydsl"

allprojects {
    repositories {
        mavenCentral()
    }
}

group 'com.insoo.jang'
version '1.0-SNAPSHOT' + new Date().format("yyyyMMddHHmmss")
sourceCompatibility = 1.8



test { // (2)
    useJUnitPlatform()
}

dependencies {
    //(3)
    implementation('org.springframework.boot:spring-boot-starter-web')
    implementation('org.springframework.boot:spring-boot-starter-mustache')
    implementation('org.springframework.boot:spring-boot-starter-oauth2-client')
    implementation('org.springframework.session:spring-session-jdbc')

    // lombok
    implementation('org.projectlombok:lombok')
    implementation 'org.junit.jupiter:junit-jupiter:5.7.0'
    annotationProcessor('org.projectlombok:lombok')
    testImplementation('org.projectlombok:lombok')
    testAnnotationProcessor('org.projectlombok:lombok')

    implementation('org.springframework.boot:spring-boot-starter-data-jpa')
    implementation('org.springframework.boot:spring-boot-starter-test')

    implementation('org.mariadb.jdbc:mariadb-java-client')
    runtimeOnly 'org.mariadb.jdbc:mariadb-java-client'

    implementation('com.h2database:h2')

    //jsoup
    implementation('org.jsoup:jsoup:1.14.2')

    //querysql
    implementation("com.querydsl:querydsl-jpa")
    implementation("com.querydsl:querydsl-apt") //Qclass 생성

    testImplementation("org.springframework.security:spring-security-test")
}

def querydslDir="src/main/generated" // Qclass 생성 위치
querydsl {
    library = "com.querydsl:querydsl-apt:4.2.1"
    jpa = true
    querydslSourcesDir = querydslDir
}

sourceSets {
    main.java.srcDir querydslDir
}

configurations {
    querydsl.extendsFrom compileClasspath
}
compileQuerydsl {
    options.annotationProcessorPath = configurations.querydsl   // querydsl-apt의 annotationProcessor 경로 지정
}

clean {
    file(querydslDir).delete()
}